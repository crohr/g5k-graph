#!/usr/bin/env ruby

require 'grid5000/graph'

require 'optparse'

@options = {
  :from => Time.now.to_i-600,
  :resolution => 15,
  :metrics => ['mem_free', 'cpu_idle', 'bytes_in', 'bytes_out'],
  :to => (Time.now.to_i/15*15),
  :output => File.expand_path("./data"),
  :empty => false
}

option_parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
* Description
  g5k-graph #{Grid5000::Graph::VERSION} - Graph your Grid'5000 metrics.
* Usage
  g5k-graph [options] < list-of-nodes
* Options
BANNER

  opts.on("-f=", "--from=", "The timeseries start time, in seconds since EPOCH [default=#{@options[:from]}]") do |v|
    @options[:from] = v.to_i
  end
  opts.on("-t=", "--to=", "The timeseries end time, in seconds since EPOCH [default=#{@options[:to]}]") do |v|
    @options[:to] = v.to_i
  end
  opts.on("-r=", "--resolution=", "The timeseries resolution, in seconds [default=#{@options[:resolution]}]") do |v|
    @options[:resolution] = v.to_i
  end
  opts.on("-m=", "--metrics=", "The comma-separated list of metrics to fetch [default=#{@options[:metrics].join(",")}]") do |v|
    @options[:metrics] = v.split(",")
  end
  opts.on("-o=", "--output=", "Where to write the timeseries data and graphs [default=#{@options[:output]}]") do |v|
    @options[:output] = File.expand_path(v)
  end
  opts.on("--empty", "Empty the output directory before writing into it [default=#{@options[:empty].inspect}]") do |v|
    @options[:empty] = true
  end
  opts.on_tail("-h", "--help", "Show this message") do
    puts opts
    exit
  end
  
end

option_parser.parse!


begin
  Grid5000::Graph.check_environment!

  nodes = []
  while node = gets() do
    nodes.push(node.chomp) unless node.strip.empty?
  end

  Grid5000::Graph.new(nodes, @options).graph!
  exit 0
rescue Grid5000::Graph::Error => e
  STDERR.puts "#{e.class.name}: #{e.message}"
  exit 1
end
